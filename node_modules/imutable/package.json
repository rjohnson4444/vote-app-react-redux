{
  "_args": [
    [
      "imutable",
      "/Users/ryanjohnson/projects/temp/react-redux-practice-app/voting-server"
    ]
  ],
  "_from": "imutable@latest",
  "_id": "imutable@0.0.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/imutable",
  "_npmUser": {
    "email": "zaboco@gmail.com",
    "name": "zaboco"
  },
  "_npmVersion": "1.2.18",
  "_phantomChildren": {},
  "_requested": {
    "name": "imutable",
    "raw": "imutable",
    "rawSpec": "",
    "scope": null,
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/imutable/-/imutable-0.0.1.tgz",
  "_shasum": "bf5a512fb80e645219d4098b70a3fa5d50b140bd",
  "_shrinkwrap": null,
  "_spec": "imutable",
  "_where": "/Users/ryanjohnson/projects/temp/react-redux-practice-app/voting-server",
  "author": {
    "name": "Bogdan Zaharia"
  },
  "bugs": {
    "url": "https://github.com/zaboco/imutable/issues"
  },
  "dependencies": {
    "surround-constructor": "~0.0.2"
  },
  "description": "Makes a class and its instances imutable",
  "devDependencies": {
    "chai": "~1.8.0",
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "~0.5.0",
    "grunt-contrib-watch": "~0.5.3",
    "grunt-lineending": "~0.2.1",
    "grunt-livescript": "~0.5.0",
    "grunt-mocha-test": "~0.7.0",
    "grunt-verbosity": "~0.2.2",
    "mocha": "~1.13.0",
    "sinon": "~1.7.3",
    "sinon-chai": "~2.4.0"
  },
  "directories": {},
  "dist": {
    "shasum": "bf5a512fb80e645219d4098b70a3fa5d50b140bd",
    "tarball": "https://registry.npmjs.org/imutable/-/imutable-0.0.1.tgz"
  },
  "homepage": "https://github.com/zaboco/imutable#readme",
  "keywords": [
    "imutable",
    "class"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "email": "zaboco@gmail.com",
      "name": "zaboco"
    }
  ],
  "name": "imutable",
  "optionalDependencies": {},
  "readme": "# imutable\n[![Build Status](https://travis-ci.org/zaboco/imutable.png?branch=master)](https://travis-ci.org/zaboco/imutable)\n\nMakes a class and its instances imutable\n\n## Install\n\n```sh\n$ npm install imutable [--save]\n```\n\n## Usage\n\n```ls\nrequire! \\imutable\n\nImClass = imutable class\n  (@value = 0) ->\n\nim-obj = new ImClass 1\nconsole.log im-obj.value # 1\n\nim-obj.value = 2 # does nothing, or throws error in strict mode\nconsole.log im-obj.value # 1, if not in strict mode\n```\n\n## Modes\n\nBy default, `imutable` [freezes](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze) the class, the prototype, as well as any new instance. So, no properties can be changed, removed or added to any of these.\n\nThere are also some advanced use cases when a property/method depends on another object. For example:\n\n```ls\ndep = value: 1\nImClass = imutable class\n  -> @dep = dep\n  dep-value:~\n    -> @dep.value\n    (v) -> @dep.value = v\n\nim-obj = new ImClass\n\nconsole.log im-obj.dep-value # 1\nim-obj.dep-value = 2\nconsole.log im-obj.dep-value # 2 !!!\n```\nSo, this object is not so imutable after all. That's because [`Object.freeze`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze) does not remove property setters.\n\nIn this case you can use `imutable \\strict`, which does exactly that, removes all setters.\n\n### Strict\n\nIn the above example, by creating the class like\n```ls\nImClass = imutable \\strict class\n...\n```\nthe line\n```ls\nim-obj.dep-value = 2\n```\nwould have no effect (or throw an error if strict)\n\n------\nAnother example using a depending object is when you use methods for getters and setters instead of property accessors\n```ls\ndep = value: 1\nImClass = imutable class\n  -> @dep = dep\n  set-dep-value: (v) -> @dep.value = v\n  get-dep-value: -> @dep.value\n\nim-obj = new ImClass\n\nconsole.log im-obj.get-dep-value! # 1\nim-obj.set-dep-value 2\nconsole.log im-obj.get-dep-value! # 2 !!! again\n```\n\nThen the solution would be to make all of the children (recursively) imutable. That's what `\\recursive` mode does\n\n### Recursive\n\nCreating the class like this\n```ls\nImClass = imutable \\recursive class\n```\nmakes all the object's successors imutable. So calling `im-obj.set-dep-value 2` would again do nothing.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/zaboco/imutable.git"
  },
  "scripts": {
    "prepublish": "grunt dist",
    "test": "grunt test"
  },
  "version": "0.0.1"
}
