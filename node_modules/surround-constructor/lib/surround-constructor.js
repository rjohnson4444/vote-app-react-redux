module.exports = function(klass, arg$){
  var ref$, before, ref1$, after, oldProto;
  ref$ = arg$ != null
    ? arg$
    : {}, before = (ref1$ = ref$.before) != null
    ? ref1$
    : function(){}, after = (ref1$ = ref$.after) != null
    ? ref1$
    : function(){};
  oldProto = klass.prototype;
  klass = function(){
    before.apply(this, arguments);
    oldProto.constructor.apply(this, arguments);
    after.apply(this, arguments);
  };
  klass.prototype = oldProto;
  return import$(klass, oldProto.constructor);
};
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}